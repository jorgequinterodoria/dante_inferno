Prompt para Desarrollador IA: Inferno Pixelado: La Redenci칩n de Dante
Especificaciones T칠cnicas Principales

Tecnolog칤as: HTML5, CSS3, JavaScript ES6+ vanilla (sin frameworks)
Almacenamiento: localStorage para guardar progreso, configuraciones y coleccionables (guardado autom치tico en todo momento).
Canvas: HTML5 Canvas para renderizado de gr치ficos 2D
Audio: Web Audio API o HTML5 Audio
Arquitectura: Juego completamente del lado cliente, sin backend

Concepto del Juego

Desarrolla un videojuego 2D de laberintos con estilo pixel art vibrante, detallado y con iluminaci칩n din치mica.

Todos los niveles del juego deben representarse como laberintos progresivamente m치s dif칤ciles (basados en el modelo de la imagen adjunta).

Toda la narrativa, men칰s, interfaz y di치logos estar치n en espa침ol.

El jugador podr치 continuar desde donde dej칩 su partida, gracias a un sistema de guardado autom치tico en localStorage.

Narrativa Principal

El juego sigue la historia de la Divina Comedia, comenzando con Dante perdido en el Bosque Oscuro y su encuentro con Virgilio. Cada c칤rculo del infierno es un laberinto 칰nico con mayor complejidad que el anterior.

Mec치nicas de Juego Core
1. Sistema de Movimiento

Dante puede moverse por el laberinto: arriba, abajo, izquierda y derecha.

Controles: WASD o flechas.

Colisiones con muros del laberinto.

2. Objetivos por Nivel

Encontrar a Virgilio (nivel 1, tutorial).

Recolectar fragmentos (objetos clave) en cada laberinto.

Desbloquear la salida (se activa solo al completar los objetivos).

3. Sistema de Progresi칩n

Cada nivel corresponde a un c칤rculo del infierno (laberinto distinto).

Dificultad creciente: m치s grande, con m치s obst치culos y coleccionables.

Sistema de checkpoints autom치ticos con localStorage.

4. Sistema de Guardado Autom치tico

El progreso debe guardarse en localStorage autom치ticamente, incluyendo:

{
  currentLevel: number,       // nivel actual
  playerPosition: {x, y},     // posici칩n dentro del laberinto
  collectedItems: array,      // fragmentos u objetos recogidos
  objectivesCompleted: array, // misiones completadas (Virgilio, etc.)
  gameSettings: { volume, dificultad },
  gameStats: { playTime, deathCount, dialoguesSeen }
}


El juego debe cargar autom치ticamente la partida al abrirse si existe progreso guardado.

Opci칩n para reiniciar desde cero en el men칰.

Laberintos

Cada nivel es un laberinto representado en Canvas.

Basado en la imagen de ejemplo, con colores y s칤mbolos:

游릴 Inicio

游댮 Dante (jugador)

游릵 Virgilio

游릱 Fragmento

游릲 Salida (bloqueada hasta cumplir objetivos)

UI y Textos

Todos los textos (narrativa, progreso, men칰s, di치logos) estar치n en espa침ol.

Panel lateral de progreso con estados:

Virgilio: Pendiente / Encontrado

Fragmentos: X/3

Salida: Bloqueada / Desbloqueada

Entrega Final

El juego debe ser un archivo HTML jugable en cualquier navegador moderno, con todos los assets incluidos. Debe:

Tener laberintos progresivos (niveles cada vez m치s dif칤ciles).

Guardar y cargar autom치ticamente el progreso con localStorage.

Mantener todo el contenido en espa침ol.

Ser jugable completamente sin conexi칩n despu칠s de la primera carga.